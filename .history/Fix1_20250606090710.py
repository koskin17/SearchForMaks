    def start_search(self):
        folder = self.folder_entry.get()  # –û—Ç—Ä–∏–º—É—î–º–æ —à–ª—è—Ö
        search_text = self.search_entry.get().strip()  # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ—à—É–∫—É

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∫–∞–∑—ñ–≤–∫–∏ —Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—à—É–∫—É —Ç–∞ –ø–∞–ø–∫–∏ –¥–ª—è –ø–æ—à—É–∫—É
        if not folder or not os.path.isdir(folder):
            messagebox.showerror("–û—à–∏–±–∫–∞", "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø–∞–ø–∫—É.")
            return
        if not search_text:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞.")
            return

        # –õ–æ–≥: –ø–æ—á–∞—Ç–æ–∫ –ø–æ—à—É–∫—É
        self.log_text.insert(tk.END, f"üîç –ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–∞: '{search_text}' –≤ –∞—Ä—Ö–∏–≤–∞—Ö –ø–∞–ø–∫–∏: {folder}\n")
        self.log_text.see(tk.END)  # –ü—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –≤–Ω–∏–∑ —Ç–∞–∫ –¥–æ —Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç—É, —â–æ–± –±—É–ª–æ –≤–∏–¥–Ω–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

        # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ .edz-—Ñ–∞–π–ª—ñ–≤
        edz_files = [f for f in os.listdir(folder) if f.lower().endswith('.edz')]
        if not edz_files:
            self.log_text.insert(tk.END, "‚ö†Ô∏è –í —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤ .edz\n")
            self.log_text.see(tk.END)
            return
        else:
            self.log_text.insert(tk.END, f"–í –ø–∞–ø–∫–µ –Ω–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∞—Ä—Ö–∏–≤—ã .edz: {', '.join(edz_files)}\n\n")
            self.log_text.see(tk.END)

        for filename in edz_files:
            self.log_text.insert(tk.END, f"–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏–≤ {filename} –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏—Å–∫–æ–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞...\n\n")
            edz_path = os.path.join(folder, filename).replace("\\", "/")  # –ü–æ–≤–Ω–∏–π —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É
            self.log_text.insert(tk.END, f"–ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É edz_path: {edz_path}\n\n")  # TODO –£–î–ê–õ–ò–¢–¨! –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤—ã–≤–æ–¥–∏—Ç—Å—è

            try:
                with py7zr.SevenZipFile(edz_path, mode='r') as archive:  # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∞—Ä—Ö—ñ–≤
                    manifest_name = next((name for name in archive.getnames() if name.endswith('manifest.xml')), None)

                    if manifest_name:
                        # –ß–∏—Ç–∞—î–º–æ manifest.xml
                        manifest_data = archive.read([manifest_name])[manifest_name].read().decode('utf-8', errors='ignore')

                        # –®—É–∫–∞—î–º–æ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –±–ª–æ–∫ <package>
                        match = re.search(
                            rf'(<package[^>]*?(key|name)="[^"]*{re.escape(search_text)}[^"]*".*?>.*?</package>)',
                            manifest_data,
                            re.DOTALL
                        )

                        if match:
                            self.log_text.insert(tk.END, f"  –ò—Å–∫–æ–º—ã–π —Ç–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ manifest.xml –≤ –∞—Ä—Ö–∏–≤–µ {filename}\n\n")
                            package_block = match.group(1)  # –û—Ç—Ä–∏–º—É—î–º–æ —Å–∞–º –±–ª–æ–∫ <package>

                            # –®—É–∫–∞—î–º–æ –≤—Å—ñ <item type="..." locator="...">
                            items = re.findall(r'<item\s+[^>]*type="([^"]+)"[^>]*locator="([^"]+)"', package_block)

                            # –®–ª—è—Ö–∏ –¥–æ —Ñ–∞–π–ª—ñ–≤ (–≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ - –∑–∞–º—ñ–Ω–µ–Ω–æ .replace —É f-—Ä—è–¥–∫—É)
                            file_paths = []
                            for type_, locator in items:
                                normalized_locator = locator.replace('\\', '/')
                                file_paths.append(f"items/{type_}/{normalized_locator}")

                            self.log_text.insert(tk.END, f"  –§–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —É–ø–∞–∫–æ–≤—ã –≤ –∞—Ä—Ö–∏–≤: {file_paths}\n\n")

                            # –ü–æ–≤–Ω–∏–π manifest.xml (—Å—Ç–≤–æ—Ä—é—î–º–æ –∑ –æ–¥–Ω–æ–≥–æ –±–ª–æ–∫—É)
                            full_manifest = f"""<manifest version="2.0">
        <packages>
            {package_block}
        </packages>
    </manifest>"""
                            self.log_text.insert(tk.END, f"–ù–æ–≤—ã–π —Ñ–∞–π–ª manifest.xml –±—ã–ª —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω.\n\n")

                            # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É –ø–∞–ø–∫—É –Ω–∞ —Ä–æ–±–æ—á–æ–º—É —Å—Ç–æ–ª—ñ
                            desktop_path = os.path.join(os.path.expanduser("~"), "Desktop")
                            temp_dir = os.path.join(desktop_path, f"temp_{search_text}")
                            os.makedirs(temp_dir, exist_ok=True)
                            self.log_text.insert(tk.END, f"–ù–∞ –†–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é —Ä–∞–±–æ—Ç—ã –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω–∞.\n\n")

                            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ manifest.xml
                            manifest_path = os.path.join(temp_dir, "manifest.xml")
                            with open(manifest_path, 'w', encoding='utf-8') as f:
                                f.write(full_manifest)
                            self.log_text.insert(tk.END, f"–í–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞–ø–∫–µ –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª manifest.xml.\n\n")

                            self.log_text.insert(tk.END, f"–†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º –∏–∑ –∞—Ä—Ö–∏–≤–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã: {file_paths}.\n\n")

                            # –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –≤ –∞—Ä—Ö–∏–≤–µ (–≤–∞–∂–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)
                            archive_filenames = archive.getnames()
                            matching_files = []
                            for desired_path in file_paths:
                                match = next((f for f in archive_filenames if f.endswith(desired_path)), None)
                                if match:
                                    matching_files.append(match)
                                else:
                                    self.log_text.insert(tk.END, f"‚ö†Ô∏è –§–∞–π–ª '{desired_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ.\n")

                            for file in matching_files:
                                self.log_text.insert(tk.END, f"–ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–∞–π–ª {file}.\n")  # TODO –£–¥–∞–ª–∏—Ç—å!
                                archive.extract(path=temp_dir, targets=[file])
                                self.log_text.insert(tk.END, f"‚úÖ –§–∞–π–ª {file} —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á—ë–Ω.\n\n")

            except Exception as e:
                self.log_text.insert(tk.END, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—Ä—Ö–∏–≤–∞ {filename}: {str(e)}\n\n")
