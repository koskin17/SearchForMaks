# Для обработки более сложных наборов данных используется пакет pandas
# Серия данных - это просто набор данных (столбец)
# Pandas позволяет объединять разные данные в одни фреймы (Dataframe) и далее уже работать
import pandas as pd
# Если в данных есть "nan" (пустые значения), то в метод чтения read_csv добавляется параметр,
# что значения, которые нужно считать not number (пропущенные значения), за это отвечает параметр na_values,
# мы указываем, на что их поменять. В данном случае меняется на "NA"
# Для переформатирования данных (чисел) используется параметр decimal в методе read_csv,
# в котором указывается разделитель дробной и целой части числа. В результате он говорит, что все числа,
# которые приходят с запятой, на самом деле не строка, а число. После этого все числа с запятой,
# которые воспринимались как строка, становятся числами.
data = pd.read_csv("https://video.ittensive.com/python-advanced/internet-2017.csv",
                   na_values="NA", decimal=",")
# После этого к нулевым данным можно применить фильтарцию методом fillna,
# в который передаём 0, т.е. чем заменить "NA"
data.fillna(0, axis=1, inplace=True)
# После этого все данные nan заменяются на 0
# Далее смотрим на данные, которые хранятся в файле
# Для этого выводим первые 5 строк данных или заголовок
print(data.head())
# Для того, чтобы получить данные в виде массива numpy мы вызываем свойство values у данных
data_array = data.values
# В этом сдучае data_array уже будет содержать numpy-массив
print(data_array)
