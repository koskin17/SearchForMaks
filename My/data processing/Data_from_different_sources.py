"""Инструкции к заданию
20 минут на выполнение
Получите данные по безработице в Москве:
https://video.ittensive.com/python-advanced/data-9753-2019-07-25.utf.csv
Объедините эти данные индексами (Месяц/Год) с данными из предыдущего задания (вызовы пожарных)
для Центральный административный округ:
https://video.ittensive.com/python-advanced/data-5283-2019-10-04.utf.csv
Найдите значение поля UnemployedMen в том месяце, когда было меньше всего вызовов в
Центральном административном округе.
Вопросы к этому заданию
Значение поля UnemployedMen
---
Пример решения:
загрузка и объединения данных по индексу.
Значение поля UnemployedMen
13465"""
import pandas as pd

data1 = pd.read_csv("https://video.ittensive.com/python-advanced/data-9753-2019-07-25.utf.csv",
                    delimiter=";")
# Установка индекса по году и месяцу. Т.е. разные колонки необходимо привести к одному индексу
data1 = data1.set_index(["Year", "Period"])
# Смотрим, что данные загрузились
print("Данные из Data1:")
print(data1.head())
data2 = pd.read_csv("https://video.ittensive.com/python-advanced/data-5283-2019-10-04.utf.csv",
                    delimiter=";")
# Смотрим, что данные загрузились
print("Данные из Data2:")
print(data2.head())
# Выбираем все значения по Центральному админ.округу
# Назначаем индекс по трём полям (множественный индекс из трёх полей
data2 = data2.set_index(["AdmArea", "Year", "Month"])
# После назначения индекса выбираем все значения по нему, используя метод loc
data2 = data2.loc["Центральный административный округ"]
# Проверяем получение данных
print(data2.head())
# Теперь данные из второго набора надо подготовить к объединению.
# Для этого мы могли бы при загрузке данных указать правильные имена, т.е. отбросить названия колонок,
# которые есть и назначить свои. В данном случае надо было "Month" из которого набора данных
# назвать Period и тогда бы колонки и индексы совпадали для объединения
# Но можно поступить хитрее и сказать, что индексы у второго набора данных теперь
# Year и Period через свойство names
data2.index.names = ["Year", "Period"]
# Теперь у data 2 у нас индексы Year и Period и теперь можно легко объединить 2 набора данных по индексам.
# Чтобы объединение прошло правильно и точно все наборы индексов были идентичными
data = pd.merge(data1, data2, left_index=True, right_index=True)
# Смотрим, что получается при объединении данных
print("Объединённые данные:")
print(data.head())
# Теперь надо найти минимальное значение calls и найти для него unemployedMen
# Для этого надо отбросить текущий индекс - он отработал и задачу решил
# Т.е. сбрасываем индексы
data = data.reset_index()
# И назначаем новый индекс по числу вызовов
data = data.set_index("Calls")
# И для нахождения минимального значения просто сортируем по этому индексу
data = data.sort_index()
# Теперь, выводя заголовок данных мы получаем ответ
print("Отсортированные данные для нахождения минимального значения: ")
print(data.head())
# Для получения конкретного числа можно вывести срез серии UnemployedMen в одну строку / одно значение
print("Одно нужное значение: ")
print(data["UnemployedMen"][0:1])
