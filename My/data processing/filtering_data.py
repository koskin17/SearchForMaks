# Фильтрация данных без индексов. Общие механизмы фильтарции данных, которые заложены в pandas.
import pandas as pd

data = pd.read_csv("https://video.ittensive.com/python-advanced/internet-2017.csv",
                   na_values="NA", decimal=",", names=["Регион", "2017"], skiprows=1, index_col="Регион")
# Проверка подготовленных данных
print(data.head())
# Если написать data > 10, то будет проведено сравнение каждого значения в строке с числом 10 и,
# если условие выполняется, то выводится True или False
print(data > 10)
# В результате получается логическая серия данных
# Для красоты можно написать, что мы сравнивали серию "2017".
# Если серий данных несколько, то нужно указать какую серию мы сравнивали.
print(data["2017"] > 10)
# Получаем значения регионов, в которых доля проникновения интернета больше 10
data_more10 = data[data["2017"] > 10]
print()
print("Регионы с пропуском больше 10:")
print(data_more10)
# В качестве условий для фильтрации можно использовать сложные значения
# Важно помнить, что при использовании больше одного условия нужно использовать круглые скобки
# Выбираем регионы, в которых интернет больше 10 и меньше 12 - амперсанд "&" означает "и"
# Условия "или" обозначается вертикальной чертой "|"
data_more10_less12 = data[(data["2017"] > 10) & (data["2017"] < 12)]
print()
print("Регионы с пропуском больше 10 и меньше 12:")
print(data_more10_less12)
# Выводим все значения, которые являются нулями, т.е. отсутствующие значения
print()
print("Отсутствующие значения: ")
data_null = data[data["2017"].isnull()]
print(data_null)
# Также есть функции all и any.
# Они работают только с нулем, но при Nan и Null они будут возвращать True, что не годится.
# Для их корректной работы надо данные доочистить - заполнить все отсутствующие значения нудём 0
# Inplace означает, что мы хотим провести замену прямо в самом массиве
data.fillna(0, axis=1, inplace=True)
# Теперь можно выбрать все строки, в которых отсутствуют нули
# В данном случае метод any выбирает все строки, т.е. обрабатывает построчно из-за наличия
# параметра axis=1.
# По умолчанию метод any работет со столбцами
data_notnull = data.loc[data.any(axis=1)]
print()
print("Данные, в которых нет нулей / пустых значение:")
print(data_notnull)
# Если надо отфильтровать столбцы, в которых все значения не нулевые
data_filled = data.loc[:, data.all()]
print(data_filled)
# Можно не фильтровать по всем нулям, а просто выкинуть из данных все нули через функцию dropna()
data = pd.read_csv("https://video.ittensive.com/python-advanced/internet-2017.csv",
                   na_values="NA", decimal=",", names=["Регион", "2017"], skiprows=1, index_col="Регион")
data_notnull = data.dropna()
print()
print("Все отсутствующие данные из массива удалены методов dropna():")
print(data_notnull)
