"""Инструкции к заданию
Возьмите данные по безработице в городе Москва:
video.ittensive.com/python-advanced/data-9753-2019-07-25.utf.csv
Сгруппируйте данные по годам, если в году меньше 6 значений, отбросьте эти годы.
Постройте модель линейной регрессии по годам среднего значения отношения
UnemployedDisabled к UnemployedTotal (процента людей с ограниченными возможностями) за месяц и ответьте,
какое ожидается значение в 2020 году при сохранении текущей политики города Москвы?
Ответ округлите до сотых. Например, 2,31
---
Какое ожидается значение в 2020 году при сохранении текущей политики города Москвы?
1,52
"""
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

# Подключаем файл с данными
data = pd.read_csv("https://video.ittensive.com/python-advanced/data-9753-2019-07-25.utf.csv",
                   delimiter=";")
# Смотрим на данные
print("Пример данных:")
print(data)
print()
print("Пример данных кратко:")
print(data.head())
# # Группируем данные по году и с фильтрацией значений меньше 6, т.е. больше 5
data_group = data.groupby("Year").filter(lambda var1: var1["Year"].count() > 5)
# Смотрим на данные
print()
print("Группировка данных по годам с фильтрацией:")
print(data_group)
# Готовим модель линейной регрессии:
# 1. Берём индекс данных из нашей группы и преобразовываем его к двумерному массиву,
# который нужен для линейной регрессии, чтобы в первой троке были сами значения и строк было всего 1.
# Метод reshape нужен, чтобы преобразовать данные из одномерного в двумерный массив.
# # Просто меняется форма данных
x = np.array(data_group["Year"]).reshape(len(data_group["Year"]), 1)
# Смотрим на данные
# print(x)  # длинна данных - 90
# Для зависимой переменой говорится, что берём вызов "Calls" и также меняем форму
y = np.array(round(data_group["UnemployedDisabled"] / data_group["UnemployedTotal"] * 100, 2)). \
    reshape(len(data_group.index), 1)
# Смотрим на данные
print(y)  # длинна данных - 90
# Данные подготовлены и вызывается метод линейной регрессии - создаём объект линейной регрессии
model = LinearRegression()
# В объект загружаем данные х и y
model.fit(x, y)
# Можно вывести ответ, т.е. предсказанные значения, но для передачи данных в модель нужно из одномерного в двумерный
# массив
print(model.predict(np.array(2020).reshape(1, 1)))
# Строим график разброса значений, т.е. разброс x и Y
plt.scatter(x, y, color="orange")
# Также к х добавляется значение 2020 года.
# Размер +1 у метода reshape из-за того, что к х добавлены значения 2020 года
x = np.append(x, [2020]).reshape(len(data_group.index)+1, 1)
#  и выводим все значения на графике.
# В результате будут видны текущие значения в виде отдельных точек и увидим предсказанные значения,
# т.е. саму линию линейной регрессии на этом же графике
# Выводим все данные на графике:
# - в качестве Х - значения года
# - в качестве значений - значение, возвращаемое моделью линейной регрессии
plt.plot(x, model.predict(x), color="blue", linewidth=3)
plt.show()
