# Линейная регрессия - метод, который фактически приближает пары значений двух переменных
# к линейной связи между ними.
# Например есть (x, y): (1, 5), (3, 10), (2, 7)
# И стоит задача - понять, каким будет y , если х будет равен 12.
# В этом случае y - зависимая переменная, х - независимая переменная
# Основываясь на методе наименьших квадратов строится линия через данный набор точек.
# Берём данные по пожарным и предсказываем кол-во вызовов в среднем в месяц в 2020 году
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# Подключается метод LinerRegression из пакета математической статистики sklearn.linear_model,
# чтобы сразу построить модель линейной регрессии.
# Именно это метол позволит спрогнозировать и преобразовать данные.
# Pandas и Numpy используется для изменения, группировки данных - для предобработки данных
from sklearn.linear_model import LinearRegression

# Подключаем файл с данными
data = pd.read_csv("https://video.ittensive.com/python-advanced/data-5283-2019-10-04.utf.csv",
                   delimiter=";")
# Смотрим на данные
print(data.head())
# Группируем данные по году и считаем среднее значение по году
data_avg = data.groupby("Year").mean(numeric_only=True)
# Смотрим на данные
print(data_avg)
# Готовим модель линейной регрессии:
# 1. Берём индекс данных из нашей группы и преобразовываем его к двумерному массиву,
# который нужен для линейной регрессии, чтобы в первой троке были сами значения и строк было всего 1.
# Метод reshape нужен, чтобы преобразовать данные из одномерного в двумерный массив.
# Просто меняется форма данных
x = np.array(data_avg.index).reshape(len(data_avg.index), 1)
# Для зависимой переменой говорится, что берём вызов "Calls" и также меняем форму
y = np.array(data_avg["Calls"]).reshape(len(data_avg.index), 1)
# Данные подготовлены и вызывается метод линейной регрессии - создаём объект линейной регрессии
model = LinearRegression()
# В объект загружаем данные х и y
model.fit(x, y)
# Можно вывести ответ, т.е. предсказанные значения, но для передачи данных в модель нужно из одномерного в двумерный
# массив
print(model.predict(np.array(2020).reshape(1, 1)))
# Строим график разброса значений, т.е. разброс x и Y
plt.scatter(x, y, color="orange")
# Также к х добавляется значение 2020 года.
# Размер +1 у метода rashape из-за того, что к х добавлены значения 2020 года
x = np.append(x, [2020]).reshape(len(data_avg.index)+1, 1)
#  и выводим все значения на графике.
# В результате будут видны текущие значения в виде отдельных точек и увидим предсказанные значения,
# т.е. саму линию линейной регрессии на этом же графике
# Выводим все данные на графике:
# - в качестве Х - значения года
# - в качестве значений - значение, возвращаемое моделью линейной регресии
plt.plot(x, model.predict(x), color="blue", linewidth=3)
plt.show()
