class Person:
    '''
    Конструктор класса или метод инициализации атрибутов класса - это специальный метод,
    который вызывается при создании эксземпляра класса.
    Вызывается он автоматически.
    Определяется он двумя подчеркиваниями в начале и в конце и словом init,
    а также обязательным параметром self.
    Конструктор позволяет определить ключевые атрибуты класса.
    '''
    def __init__(self, name):
        self.name = name
        self.__age = 20     # инкапсуляция или сокрытие атрибута (свойства)
                            # объекта от изменения из основного кода программы 
        
    def print_info(self):
        print(f'Name: {self.name}, Age: {self.__age}')

    def get_age(self):      # определение метода геттера для свойства age класса Person
        return self.__age

    def  set_age(self, value):  # определение метода сеттера для свойства age класса Person
        ''' При помощи метода set можно контролировать передаваемые значения '''
        if value in range(1, 101):
            self.__age = value
        else:
            print('Введён некорретный возраст.')

    ''' При помощи декоратора можно из метода сделать метод геттер. Для этого ставится @ + property'''
    @property
    def age(self):
        return self.__age

    ''' При помощи декоратора можно сделать метод сеттер.
    Для этого ставится @ + имя метода-геттера + .setter
    Метод setter обязательно определяется после метода геттера!
    И геттер и сеттер должны называться одинаково!'''
    @age.setter
    def age(self,value):
        if value in range(1, 101):
            self.__age = value
        else:
            print('Введён некорретный возраст.')
        
        
