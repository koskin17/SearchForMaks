class Car:
    model = "BMW"
    engine = 1.6


"""Атрибуты класса"""


class Person:
    name = 'Ivan'
    age = 30


"""Посмотреть все атрибуты класса"""
Person.__dict__
"""Также обращаться к атрибута класса можно функцией getattr.
 В это случае имя атрибута надо указать в кавычка, как строку 'name'"""
getattr(Person, 'name')

"""Если обращаться к атрибуту, которого нет в классе, то получим ошибку.
 Но функция getattr поддерживает третий параметр, который вернётся, если атрибут не определён."""
getattr(Person, 'x', "Атрибут не определён в классе")

"""Изменение атрибута класса """
Person.name = 'Misha'

"""Если же мы через изменение атрибута обратимся к атрибуту, которого нет в классе,
 то Python динамические создаёт такой атрибут"""
Person.x = 100

"""И теперь он есть в перечне всех атрибутов класса """
Person.__dict__

"""Также значение атрибутов можно устанавливать через функцию setattr.
 Она принимает три значения: объект(кому мы устанавливаем), имя атрибута и его значение."""
setattr(Person, 'test_attr', 200)

"""Удаление аттрибута из класса при помощи del"""
del Person.test_attr
"""Также можно удалять функцией delattr(Person, 'x') """
delattr(Person, 'x')

a1 = Car()
a2 = Car()
print("Атрибутов у экземпляра класса нет:", a1.__dict__)
print("Атрибутов у экземпляра класса нет:", a2.__dict__)
"""Создавать аттрибутов экземпляра также можно функций setatt()"""
print("Установили аттрибут seta = 4")
a1.seat = 4
print("Значение аттрибута seat:", a1.seat)
print("Установили значение аттрибута model")
a1.model = 'Lada'
print("Значение аттрибута model:", a1.model)

"""Посмотреть аттрибуты экземпляра также можно через __dic__
 a2.__dict__"""
print("У переменной a2 аттрибутов нет - ", a2.__dict__)
a2.size = 80
print("Установили аттрибут size:", a2.__dict__)
print(a2.size)
