""" Скрытые атрибутов.
Для скрытия атрибутов объектов имена атрибутов должны начинаться
с 2-х подчёркиваний "__"
"""


class A:
    property1 = 'Property 1'
    property2 = 'Property 2'

    '''
    Параметр self является обязательным для всех методов класса.
    Также может быть установлен параметр по умолчанию.
    В данном случае это name.
    '''

    def say_hi(self, name='guest'):
        return 'Hi, ' + name


a = A()
b = A()
print(a.say_hi('John'))
print(a.say_hi('Katty'))
print(a.say_hi())
print()


class B:
    property1 = 'Property 1'
    property2 = 'Property 2'
    '''
    Параметр по умолчанию можно описать в качестве свойства объектов класса
    В этом случае параметр name становиться необязательным для метода класса
    Для необязательных параметров метода по ним указывается пустая строка ''
    '''
    name = 'guest'

    '''
    Если параметр описывается в качестве свойства класса, то
    в методе нужно обращаться не к параметру, а к свойству класса.
    Для этого указывается параметр self и свойство - self.name
    '''

    def say_hi(self, name=''):
        if name:
            return 'Hi, ' + name
        else:
            return 'Hello, ' + self.name


a = B()
b = B()
print('Вариант 2')
print(a.say_hi('John'))
print(a.say_hi('Katty'))
print(a.say_hi())
print()

"""Конструкторы класса.
Классы принято создавать в отдельном файле и этот файл импортировать в основной код программы."""

"""
Инкапсуляция - это метод, который предотвращает изменение
атрибутов объекта из кода программы.
Т.е. атрибуты скрываются и недоступны для изменения.
Для сокрытия атрибута от изменения перед названием атрибута
ставится:
- одно подчёркивание "_" - self._age означает, что разработчик кода
не желает, чтобы данный атрибут менялся и указывает на это;
- двойное подчеркивание "__" - self.__age делает атрибут скрытым и
попытки его изменить из кода основной программы не дадут результата.

Если же к свойству класса обратиться через запись _Person__age ,
то так всё-таки можно изменить его значение.

Для получения и установки свойств объектов класса используются:
- методы геттеры - методы получения значений свойств;
- методы сеттеры - методы установки значений свойств.
"""
