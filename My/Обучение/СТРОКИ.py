''' Замена символов в строке на другие по условию '''

def fake_bin(x):
    x1 = []
    for i in range(len(x)):
        if int(x[i]) < 5:
            x1.append('0')
        elif int(x[i]) >= 5:
            x1.append('1')
    return ''.join(x1)

''' Вариант 2 '''

def fake_bin(x):
    return ''.join('0' if c < '5' else '1' for c in x)

''' Написание и соединение строки в цикле '''

def count_sheep(n):
    return ''.join(f"{i} sheep..." for i in range(1,n+1))

''' Удаление пробелов из строки '''
def no_space(x):
    return x.replace(' ' ,'')

''' Удаление символов в начале или в конце строки.
Используется функция s.lstrip() или s.rstrip(),
в зависимости от удаление с начала или с конца строки'''
def remove(n):
        tmp = []
        n = n.split()
        for word in n
                tmp.append(word.rstrip('!'))
        return ' '.join(tmp) 


''' Замена символов в строке '''
def correct(string):
    return string.translate(str.maketrans("501", "SOI"))

def correct(string):
    return string.replace('1','I').replace('0','O').replace('5','S')

tr=str.maketrans('015','OIS')
def correct(string):
    return string.translate(tr)

''' Метод isinstance проверяет соответствие типа элемента указанному

isinstance(1, int)  # True
isinstance('some', str)  # True
isinstance(1.7, float)  # True '''

''' Перевести первую букву каждого слова в строке в Заглавную '''

import string
string.capwords(s, sep=None)

Параметры:
s - произвольная строка.
sep=None - строка, используется для разделения и объединения слов.
Возвращаемое значение:
новая строка.
Описание:
Метод string.capwords() работает следующим образом: разделяет строку s на слова с помощью метода str.split(), далее используя метод строки str.capitalize() преобразует каждое слово с заглавной буквы и соединяет полученные слова используя метод str.join().

Если необязательный второй аргумент sep отсутствует или None последовательности пробельных символов заменяются одним пробелом, а начальные и конечные пробелы удаляются, в противном случае sep используется для разделения и объединения слов.

''' РЕГУЛЯРНЫЕ ВЫРАЖЕНИЯ '''
''' Проверка формата введённого времени '''

date = "09-10-2072 18:58"

import re

def date_checker(date):
    if re.match(r'[0-3]{1}[\d]{1}[-][0-1]{1}[0-2]{1}[-][\d]{4}[\s][0-2]{1}[0-3]{1}[:][0-5]{1}[\d]{1}', date):
        return True
    return False

print(date_checker(date))

''' Разделение строки по нескольким разделителям.
Нужно импортировать модуль re - import re.
и уже с его помощью и с помощью функции split() строка делится по нескольким разделителям:
re.split(";|:|\*|\+|\#|\||\&|\%|\>|\!|\=|\?|,", string)
ВАЖНО! в кавчках перечисляются символы, по которым надо разделить строку, НО!
Разделяются символы вертикальной чертой | (Shift + \ в англ.раскладке) и символы должны быть экранированы обратным слешэм.
Также можно указать в регулярном выражении в квадратных скобках []:
- ^ - Любой символ, кроме перечисленных
- \w - Любая буква (то, что может быть частью слова), а также цифры и _
- экранированная точка \.
- "-" - тире 
re.split('[^\w\.-]', string1)'''
