# –Ü–º–ø–æ—Ä—Ç –±—ñ–±–ª—ñ–æ—Ç–µ–∫ –¥–ª—è GUI, —Ä–æ–±–æ—Ç–∏ –∑ —Ñ–∞–π–ª–∞–º–∏, –∞—Ä—Ö—ñ–≤–∞–º–∏ —Ç–∞ —Ç–µ–∫—Å—Ç–æ–º
import tkinter as tk  # –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ Tkinter ‚Äî –±–∞–∑–æ–≤–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ—á–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
from tkinter import filedialog, scrolledtext, messagebox  # –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
import os  # –†–æ–±–æ—Ç–∞ –∑ –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–æ—é —Å–∏—Å—Ç–µ–º–æ—é (—à–ª—è—Ö–∏, –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—ñ–≤ —ñ –ø–∞–ø–æ–∫)
import py7zr  # –ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è/–∑–∞–ø–∏—Å—É 7z-–∞—Ä—Ö—ñ–≤—ñ–≤ (–ø—Ä–∞—Ü—é—î —ñ –∑ .edz)
import tempfile  # –î–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö –ø–∞–ø–æ–∫ (–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è, –∞–ª–µ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ)
# import getpass  # –ó–∞–∫–æ–º–µ–Ω—Ç–æ–≤–∞–Ω–æ ‚Äî –º—ñ–≥ –±–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—å –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
import shutil  # –ú–æ–¥—É–ª—å –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è —ñ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤/–ø–∞–ø–æ–∫
import re  # –†–µ–≥—É–ª—è—Ä–Ω—ñ –≤–∏—Ä–∞–∑–∏ ‚Äî –∑—Ä—É—á–Ω–æ –¥–ª—è –ø–æ—à—É–∫—É –≤ —Ç–µ–∫—Å—Ç—ñ

# –ö–ª–∞—Å, —è–∫–∏–π –æ–ø–∏—Å—É—î GUI-–¥–æ–¥–∞—Ç–æ–∫
class TextSearchApp:
    def __init__(self, root):
        self.root = root  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ
        self.root.title("–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É –≤ —Ñ–∞–π–ª–∞—Ö")  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤—ñ–∫–Ω–∞

        # === –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥—É —Ç–µ–∫—Å—Ç—É –ø–æ—à—É–∫—É ===
        tk.Label(root, text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞:").grid(row=0, column=0, padx=5, pady=5, sticky=tk.W)
        self.search_entry = tk.Entry(root, width=40)  # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–ª–µ
        self.search_entry.grid(row=0, column=1, padx=5, pady=5, sticky=tk.W)  # –†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –ø–æ–ª—è

        self.paste_button = tk.Button(root, text="–í—Å—Ç–∞–≤–∏—Ç—å", command=self.paste_from_clipboard)  # –ö–Ω–æ–ø–∫–∞ –≤—Å—Ç–∞–≤–∫–∏
        self.paste_button.grid(row=0, column=2, padx=5, pady=5, sticky=tk.NW)  # –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏

        self.add_context_menu(self.search_entry)  # –î–æ–¥–∞—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–µ –º–µ–Ω—é –ü–ö–ú
        self.search_entry.bind('<KeyPress>', self.handle_keypress)  # –û–±—Ä–æ–±–∫–∞ Ctrl+V (–≤—Å—Ç–∞–≤–∫–∞ –∑ –±—É—Ñ–µ—Ä–∞)

        # === –ü–æ–ª–µ –¥–ª—è –≤–∏–±–æ—Ä—É –ø–∞–ø–∫–∏ ===
        tk.Label(root, text="–ü–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏:").grid(row=1, column=0, padx=5, pady=5, sticky=tk.W)
        self.folder_entry = tk.Entry(root, width=50)  # –¢–µ–∫—Å—Ç–æ–≤–µ –ø–æ–ª–µ –¥–ª—è —à–ª—è—Ö—É –¥–æ –ø–∞–ø–∫–∏
        self.folder_entry.grid(row=1, column=1, padx=5, pady=5, sticky=tk.W)
        self.browse_button = tk.Button(root, text="–û–±–∑–æ—Ä...", command=self.browse_folder)  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∏–±–æ—Ä—É –ø–∞–ø–∫–∏
        self.browse_button.grid(row=1, column=2, padx=5, pady=5, sticky=tk.NW)

        # === –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫—É –ø–æ—à—É–∫—É ===
        self.search_button = tk.Button(root, text="Search", command=self.start_search)
        self.search_button.grid(row=2, column=1, pady=10)

        # === –¢–µ–∫—Å—Ç–æ–≤–µ –ø–æ–ª–µ –¥–ª—è –ª–æ–≥—ñ–≤ ===
        self.log_text = scrolledtext.ScrolledText(root, width=80, height=20, state='normal')  # –ü—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–µ –ø–æ–ª–µ
        self.log_text.grid(row=3, column=0, columnspan=3, padx=5, pady=5)

    # –ú–µ—Ç–æ–¥: –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é (–ü–ö–ú -> "–í—Å—Ç–∞–≤–∏—Ç—å")
    def add_context_menu(self, widget):
        menu = tk.Menu(widget, tearoff=0)  # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é –±–µ–∑ "–≤—ñ–¥—Ä–∏–≤—É"
        menu.add_command(label="–í—Å—Ç–∞–≤–∏—Ç—å", command=lambda: self.paste_from_clipboard(None))  # –î–æ–¥–∞—î–º–æ –ø—É–Ω–∫—Ç –º–µ–Ω—é
        widget.bind("<Button-3>", lambda event: menu.tk_popup(event.x_root, event.y_root))  # –ü—Ä–∏–≤‚Äô—è–∑—É—î–º–æ –ü–ö–ú

    # –ú–µ—Ç–æ–¥: –≤—Å—Ç–∞–≤–∫–∞ –∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º—ñ–Ω—É
    def paste_from_clipboard(self, event=None):
        try:
            clipboard_text = self.root.clipboard_get()  # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç —ñ–∑ –±—É—Ñ–µ—Ä–∞
            self.search_entry.delete(0, tk.END)  # –û—á–∏—â–∞—î–º–æ –ø–æ–ª–µ
            self.search_entry.insert(0, clipboard_text)  # –í—Å—Ç–∞–≤–ª—è—î–º–æ —Ç–µ–∫—Å—Ç
        except tk.TclError:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞.")  # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É

    # –ú–µ—Ç–æ–¥: –æ–±—Ä–æ–±–∫–∞ –∫–ª–∞–≤—ñ—à (Ctrl+V)
    def handle_keypress(self, event):
        if (event.state & 0x4) and event.keycode == 86:  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ Ctrl+V
            self.paste_from_clipboard()
            return "break"  # –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–¥–∞–ª—å—à—É –æ–±—Ä–æ–±–∫—É

    # –ú–µ—Ç–æ–¥: –≤–∏–±—ñ—Ä –ø–∞–ø–∫–∏
    def browse_folder(self):
        folder = filedialog.askdirectory()  # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –¥—ñ–∞–ª–æ–≥ –≤–∏–±–æ—Ä—É –ø–∞–ø–∫–∏
        if folder:
            self.folder_entry.delete(0, tk.END)
            self.folder_entry.insert(0, folder)  # –í—Å—Ç–∞–≤–ª—è—î–º–æ —à–ª—è—Ö —É –ø–æ–ª–µ

    # –ú–µ—Ç–æ–¥: –ø–æ—à—É–∫ —Ñ–∞–π–ª—ñ–≤ —É –≤–∏–±—Ä–∞–Ω—ñ–π –ø–∞–ø—Ü—ñ
    def start_search(self):
        folder = self.folder_entry.get()  # –û—Ç—Ä–∏–º—É—î–º–æ —à–ª—è—Ö
        search_text = self.search_entry.get().strip()  # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ—à—É–∫—É

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∫–∞–∑—ñ–≤–∫–∏ —Ç–µ–∫—Å—Ç—É –¥–ª—è –ø–æ—à—É–∫—É —Ç–∞ –ø–∞–ø–∫–∏ –¥–ª—è –ø–æ—à—É–∫—É
        if not folder or not os.path.isdir(folder):
            messagebox.showerror("–û—à–∏–±–∫–∞", "–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø–∞–ø–∫—É.")
            return
        if not search_text:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞.")
            return

        # –õ–æ–≥: –ø–æ—á–∞—Ç–æ–∫ –ø–æ—à—É–∫—É
        self.log_text.insert(tk.END, f"üîç –ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–∞: '{search_text}' –≤ –∞—Ä—Ö–∏–≤–∞—Ö –ø–∞–ø–∫–∏: {folder}\n")
        self.log_text.see(tk.END) # –ü—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –≤–Ω–∏–∑ —Ç–∞–∫ –¥–æ —Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç—É, —â–æ–± –±—É–ª–æ –≤–∏–¥–Ω–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

        # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ .edz-—Ñ–∞–π–ª—ñ–≤
        edz_files = [f for f in os.listdir(folder) if f.lower().endswith('.edz')]
        if not edz_files:
            self.log_text.insert(tk.END, "‚ö†Ô∏è –í —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤ .edz\n")
            self.log_text.see(tk.END) # –ü—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –≤–Ω–∏–∑ —Ç–∞–∫ –¥–æ —Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç—É, —â–æ–± –±—É–ª–æ –≤–∏–¥–Ω–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            return
        else:
            self.log_text.insert(tk.END, f"–í –ø–∞–ø–∫–µ –Ω–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∞—Ä—Ö–∏–≤—ã .edz: {', '.join(edz_files)}\n\n")
            self.log_text.see(tk.END) # –ü—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –≤–Ω–∏–∑ —Ç–∞–∫ –¥–æ —Ç–æ–≥,–æ –º–æ–º–µ–Ω—Ç—É, —â–æ–± –±—É–ª–æ –≤–∏–¥–Ω–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

        for filename in edz_files:
            self.log_text.insert(tk.END, f"–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏–≤ {filename} –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏—Å–∫–æ–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞...\n\n")
            edz_path = os.path.join(folder, filename).replace("\\", "/")  # –ü–æ–≤–Ω–∏–π —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É
            try:
                with py7zr.SevenZipFile(edz_path, mode='r') as archive:  # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∞—Ä—Ö—ñ–≤
                    manifest_name = next((name for name in archive.getnames() if name.endswith('manifest.xml')), None)

                    if manifest_name:
                        # –ß–∏—Ç–∞—î–º–æ manifest.xml
                        manifest_data = archive.read([manifest_name])[manifest_name].read().decode('utf-8', errors='ignore')

                        # –®—É–∫–∞—î–º–æ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –±–ª–æ–∫ <package>
                        match = re.search(
                            rf'(<package[^>]*?(key|name)="[^"]*{re.escape(search_text)}[^"]*".*?>.*?</package>)',
                            manifest_data,
                            re.DOTALL
                        )

                        if match:
                            self.log_text.insert(tk.END, f"  –ò—Å–∫–æ–º—ã–π —Ç–µ–∫—Å—Ç –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ manifest.xml –≤ –∞—Ä—Ö–∏–≤–µ {filename}\n\n")
                            package_block = match.group(1)  # –û—Ç—Ä–∏–º—É—î–º–æ —Å–∞–º –±–ª–æ–∫ <package>

                            # –®—É–∫–∞—î–º–æ –≤—Å—ñ <item type="..." locator="...">
                            items = re.findall(r'<item\s+[^>]*type="([^"]+)"[^>]*locator="([^"]+)"', package_block)

                            # –®–ª—è—Ö–∏ –¥–æ —Ñ–∞–π–ª—ñ–≤
                            file_paths = [f"items/{type_}/{locator.replace('\\', '/')}" for type_, locator in items]
                            self.log_text.insert(tk.END, f"  –§–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —É–ø–∞–∫–æ–≤—ã –≤ –∞—Ä—Ö–∏–≤: {file_paths}\n\n")
                            self.log_text.see(tk.END)

                            # –ü–æ–≤–Ω–∏–π manifest.xml (—Å—Ç–≤–æ—Ä—é—î–º–æ –∑ –æ–¥–Ω–æ–≥–æ –±–ª–æ–∫—É)
                            full_manifest = f"""<manifest version="2.0">
    <packages>
        {package_block}
    </packages>
</manifest>"""
                            self.log_text.insert(tk.END, f"–ù–æ–≤—ã–π —Ñ–∞–π–ª manifest.xml –±—ã–ª —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω.\n\n")

                            # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—É –ø–∞–ø–∫—É –Ω–∞ —Ä–æ–±–æ—á–æ–º—É —Å—Ç–æ–ª—ñ
                            desktop_path = os.path.join(os.path.expanduser("~"), "Desktop")
                            temp_dir = os.path.join(desktop_path, f"temp_{search_text}")
                            os.makedirs(temp_dir, exist_ok=True)
                            self.log_text.insert(tk.END, f"–ù–∞ –†–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é —Ä–∞–±–æ—Ç—ã –±—É–¥–µ—Ç –∞–≤—Ç–æ–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω–∞.\n\n")
                            self.log_text.see(tk.END)

                            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ manifest.xml
                            manifest_path = os.path.join(temp_dir, "manifest.xml")
                            with open(manifest_path, 'w', encoding='utf-8') as f:
                                f.write(full_manifest)
                            self.log_text.insert(tk.END, f"–í–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞–ø–∫–µ –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª manifest.xml.\n\n")
                            self.log_text.see(tk.END)

                            # –í–∏—Ç—è–≥—É—î–º–æ –∑–∞–∑–Ω–∞—á–µ–Ω—ñ —Ñ–∞–π–ª–∏
                            # extracted_files = []
                            # # all_names = archive.getnames()
                            self.log_text.insert(tk.END, f"–†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º –∏–∑ –∞—Ä—Ö–∏–≤–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã: {file_paths}.\n\n")
                            self.log_text.see(tk.END)
                            
                            # # with py7zr.SevenZipFile(archive, mode='r') as archive:
                            for file in file_paths:
                                self.log_text.insert(tk.END, f"–†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Ñ–∞–π–ª: {file}.\n\n")
                                self.log_text.see(tk.END)
                                self.log_text.insert(tk.END, f"–ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–∞–π–ª {file}.\n")
                                self.log_text.see(tk.END)
                                file_path = os.path.join(edz_path, file).replace('\\', '/')
                                archive.extract(path=temp_dir, targets=[file_path])
                                self.log_text.insert(tk.END, f"–§–∞–π–ª {file_path} —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á—ë–Ω.\n\n")
                                self.log_text.see(tk.END)

                            # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∞—Ä—Ö—ñ–≤—É –Ω–∞ —Ä–æ–±–æ—á–æ–º—É —Å—Ç–æ–ª—ñ
                            archive_name = f"{search_text}.edz"
                            archive_path = os.path.join(desktop_path, archive_name)

                            # –ó–∞–ø–∏—Å —Ñ–∞–π–ª—ñ–≤ —É –Ω–æ–≤–∏–π –∞—Ä—Ö—ñ–≤
                            with py7zr.SevenZipFile(archive_path, 'w') as new_archive:
                                for root, _, files in os.walk(temp_dir):
                                    for file in files:
                                        full_path = os.path.join(root, file)
                                        rel_path = os.path.relpath(full_path, temp_dir)
                                        new_archive.write(full_path, rel_path)

                            # –õ–æ–≥: –∞—Ä—Ö—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ
                            self.log_text.insert(tk.END, f"üíæ –ê—Ä—Ö–∏–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ: {archive_name}\n")
                            self.log_text.see(tk.END)

                            # –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ—ó –ø–∞–ø–∫–∏ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ, –Ω–∞—Ä–∞–∑—ñ –∑–∞–∫–æ–º–µ–Ω—Ç–æ–≤–∞–Ω–æ)
                            shutil.rmtree(temp_dir, ignore_errors=True)
                            self.log_text.insert(tk.END, f"üßπ –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞: {temp_dir}\n")
                            self.log_text.see(tk.END)

                            return  # –û–±—Ä–æ–±–∏–ª–∏ –ø–µ—Ä—à–∏–π –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Ñ–∞–π–ª ‚Äî –≤–∏—Ö–æ–¥–∏–º–æ

                        else:
                            self.log_text.insert(tk.END, f"‚õî –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ: {filename}\n")
                            self.log_text.see(tk.END)
                    else:
                        self.log_text.insert(tk.END, f"‚ùå manifest.xml –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ: {filename}\n")
                        self.log_text.see(tk.END)

            except Exception as e:
                self.log_text.insert(tk.END, f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {filename}: {e}\n")
                self.log_text.see(tk.END)

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É: –∑–∞–ø—É—Å–∫ GUI
if __name__ == "__main__":
    root = tk.Tk()  # –°—Ç–≤–æ—Ä—é—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ
    app = TextSearchApp(root)  # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫
    root.mainloop()  # –ó–∞–ø—É—Å–∫–∞—î–º–æ –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–∏–π —Ü–∏–∫–ª –ø–æ–¥—ñ–π
